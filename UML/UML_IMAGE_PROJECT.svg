<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2178px" preserveAspectRatio="none" style="width:3260px;height:2178px;background:#FFFFFF;" version="1.1" viewBox="0 0 3260 2178" width="3260px" zoomAndPan="magnify"><defs><filter height="300%" id="fbdipukgk3hnj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[12c6f0e4aab63503b3537fce64849003]
cluster Data Transfer Object (DTO)--><path d="M2867,1869 C2867,1859 3060,1859 3060,1859 C3060,1859 3253,1859 3253,1869 L3253,2142 C3253,2152 3060,2152 3060,2152 C3060,2152 2867,2152 2867,2142 L2867,1869 " fill="#FFFFFF" filter="url(#fbdipukgk3hnj)" style="stroke:#000000;stroke-width:1.5;"/><path d="M2867,1869 C2867,1879 3060,1879 3060,1879 C3060,1879 3253,1879 3253,1869 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="224" x="2948" y="1893.9951">Data Transfer Object (DTO)</text><!--MD5=[f60274e7b3fadd11d7b2ff377657ad2c]
cluster Business Logic--><polygon fill="#FFFFFF" filter="url(#fbdipukgk3hnj)" points="326,6,452,6,459,28.2969,2843,28.2969,2843,2171.5,326,2171.5,326,6" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="326" x2="459" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="120" x="330" y="20.9951">Business Logic</text><!--MD5=[972bde5337b4335dd91fa5354c932445]
class Point--><rect codeLine="15" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="227.2656" id="Point" style="stroke:#A80036;stroke-width:1.5;" width="354" x="2883" y="1909"/><ellipse cx="3041.75" cy="1925" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3044.0938,1920.6719 C3043.1563,1920.2344 3042.5625,1920.0938 3041.6875,1920.0938 C3039.0625,1920.0938 3037.0625,1922.1719 3037.0625,1924.8906 L3037.0625,1926.0156 C3037.0625,1928.5938 3039.1719,1930.4844 3042.0625,1930.4844 C3043.2813,1930.4844 3044.4375,1930.1875 3045.1875,1929.6406 C3045.7656,1929.2344 3046.0938,1928.7813 3046.0938,1928.3906 C3046.0938,1927.9375 3045.7031,1927.5469 3045.2344,1927.5469 C3045.0156,1927.5469 3044.8125,1927.625 3044.625,1927.8125 C3044.1719,1928.2969 3044.1719,1928.2969 3043.9844,1928.3906 C3043.5625,1928.6563 3042.875,1928.7813 3042.1094,1928.7813 C3040.0625,1928.7813 3038.7656,1927.6875 3038.7656,1925.9844 L3038.7656,1924.8906 C3038.7656,1923.1094 3040.0156,1921.7969 3041.75,1921.7969 C3042.3281,1921.7969 3042.9375,1921.9531 3043.4063,1922.2031 C3043.8906,1922.4844 3044.0625,1922.7031 3044.1563,1923.1094 C3044.2188,1923.5156 3044.25,1923.6406 3044.3906,1923.7656 C3044.5313,1923.9063 3044.7656,1924.0156 3044.9844,1924.0156 C3045.25,1924.0156 3045.5156,1923.875 3045.6875,1923.6563 C3045.7969,1923.5 3045.8281,1923.3125 3045.8281,1922.8906 L3045.8281,1921.4688 C3045.8281,1921.0313 3045.8125,1920.9063 3045.7188,1920.75 C3045.5625,1920.4844 3045.2813,1920.3438 3044.9844,1920.3438 C3044.6875,1920.3438 3044.4844,1920.4375 3044.2656,1920.75 L3044.0938,1920.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="28" x="3062.25" y="1929.1543">Point</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2884" x2="3236" y1="1941" y2="1941"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2891" y="1949"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="2903" y="1955.2104">_coordinates: Vector2d</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2891" y="1961.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="2903" y="1968.0151">label: int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2884" x2="3236" y1="1974.6094" y2="1974.6094"/><ellipse cx="2894" cy="1985.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="2903" y="1988.8198">Point(coordinates: Vector2d)</text><ellipse cx="2894" cy="1998.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="2903" y="2001.6245">Point(x = 0.0: const double, y = 0.0: const double )</text><ellipse cx="2894" cy="2011.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="2903" y="2014.4292">Point(point: const Point&amp;)</text><ellipse cx="2894" cy="2024.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="2903" y="2027.2339">void SetCoordinates(x: const double, y: const double)</text><ellipse cx="2894" cy="2036.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="2903" y="2040.0386">const Vector2d&amp; GetCoordinates() const</text><ellipse cx="2894" cy="2049.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="2903" y="2052.8433">int GetPointLabel() const</text><ellipse cx="2894" cy="2062.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="2903" y="2065.6479">void SetPointLabel(label: const int)</text><ellipse cx="2894" cy="2075.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="2903" y="2078.4526">Point&amp; operator=(point: const Point&amp;)</text><ellipse cx="2894" cy="2088.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="2903" y="2091.2573">Point&amp; operator+(point: const Point&amp;)</text><ellipse cx="2894" cy="2100.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="2903" y="2104.062">Point&amp; operator-(point: const Point&amp;)</text><ellipse cx="2894" cy="2113.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="2903" y="2116.8667">friend bool operator==(p1: const Point&amp;, p2: const Point&amp;)</text><ellipse cx="2894" cy="2126.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="2903" y="2129.6714">friend bool operator!=(p1: const Point&amp;, p2: const Point&amp;)</text><!--MD5=[a5e62674a9ac7a2918bfb7690ceafb4e]
class ISegment--><rect codeLine="36" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="176.0469" id="ISegment" style="stroke:#A80036;stroke-width:1.5;" width="343" x="1908.5" y="1934.5"/><ellipse cx="2046.25" cy="1950.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2047.2031,1947.2813 L2048.9219,1947.2813 C2049.3125,1947.2813 2049.5,1947.25 2049.625,1947.1719 C2049.8906,1947.0156 2050.0313,1946.7344 2050.0313,1946.4375 C2050.0313,1946.1719 2049.9219,1945.9063 2049.6875,1945.7344 C2049.5156,1945.625 2049.375,1945.5938 2048.9219,1945.5938 L2043.7813,1945.5938 C2043.3438,1945.5938 2043.2188,1945.6094 2043.0625,1945.7031 C2042.8125,1945.8594 2042.6563,1946.1563 2042.6563,1946.4375 C2042.6563,1946.7188 2042.7969,1946.9688 2043.0156,1947.1406 C2043.1719,1947.25 2043.3594,1947.2813 2043.7813,1947.2813 L2045.5,1947.2813 L2045.5,1953.7969 L2043.7813,1953.7969 C2043.3438,1953.7969 2043.2188,1953.8125 2043.0625,1953.9219 C2042.8125,1954.0781 2042.6563,1954.3594 2042.6563,1954.6563 C2042.6563,1954.9063 2042.7969,1955.1719 2043.0156,1955.3281 C2043.1719,1955.4531 2043.375,1955.5 2043.7813,1955.5 L2048.9219,1955.5 C2049.6719,1955.5 2050.0313,1955.2188 2050.0313,1954.6563 C2050.0313,1954.375 2049.9219,1954.125 2049.6875,1953.9531 C2049.5156,1953.8281 2049.375,1953.7969 2048.9219,1953.7969 L2047.2031,1953.7969 L2047.2031,1947.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59" x="2066.75" y="1954.6543">ISegment</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1909.5" x2="2250.5" y1="1966.5" y2="1966.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1909.5" x2="2250.5" y1="1974.5" y2="1974.5"/><ellipse cx="1919.5" cy="1985.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1928.5" y="1988.7104">void SetStart(start: const Point&amp;)</text><ellipse cx="1919.5" cy="1998.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1928.5" y="2001.5151">const Point&amp; GetStart() const</text><ellipse cx="1919.5" cy="2011.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="1928.5" y="2014.3198">Point&amp; GetStart() const</text><ellipse cx="1919.5" cy="2023.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="1928.5" y="2027.1245">void SetEnd(end: const Point&amp;)</text><ellipse cx="1919.5" cy="2036.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1928.5" y="2039.9292">const Point&amp; GetEnd() const</text><ellipse cx="1919.5" cy="2049.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="1928.5" y="2052.7339">Point&amp; GetEnd()</text><ellipse cx="1919.5" cy="2062.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="1928.5" y="2065.5386">void SetSegment(start: const Point&amp;, end: const Point&amp;)</text><ellipse cx="1919.5" cy="2075.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1928.5" y="2078.3433">const Vector2d ComputeTangent()</text><ellipse cx="1919.5" cy="2087.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="1928.5" y="2091.1479">const Vector2d GetTangent() const</text><ellipse cx="1919.5" cy="2100.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="1928.5" y="2103.9526">int PointOnTheRightSide(point: const Point&amp;) const</text><!--MD5=[220eb97dd738422dcfb96be6c83c4129]
class Segment--><rect codeLine="49" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="227.2656" id="Segment" style="stroke:#A80036;stroke-width:1.5;" width="395" x="2267.5" y="1505"/><ellipse cx="2433.75" cy="1521" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2436.0938,1516.6719 C2435.1563,1516.2344 2434.5625,1516.0938 2433.6875,1516.0938 C2431.0625,1516.0938 2429.0625,1518.1719 2429.0625,1520.8906 L2429.0625,1522.0156 C2429.0625,1524.5938 2431.1719,1526.4844 2434.0625,1526.4844 C2435.2813,1526.4844 2436.4375,1526.1875 2437.1875,1525.6406 C2437.7656,1525.2344 2438.0938,1524.7813 2438.0938,1524.3906 C2438.0938,1523.9375 2437.7031,1523.5469 2437.2344,1523.5469 C2437.0156,1523.5469 2436.8125,1523.625 2436.625,1523.8125 C2436.1719,1524.2969 2436.1719,1524.2969 2435.9844,1524.3906 C2435.5625,1524.6563 2434.875,1524.7813 2434.1094,1524.7813 C2432.0625,1524.7813 2430.7656,1523.6875 2430.7656,1521.9844 L2430.7656,1520.8906 C2430.7656,1519.1094 2432.0156,1517.7969 2433.75,1517.7969 C2434.3281,1517.7969 2434.9375,1517.9531 2435.4063,1518.2031 C2435.8906,1518.4844 2436.0625,1518.7031 2436.1563,1519.1094 C2436.2188,1519.5156 2436.25,1519.6406 2436.3906,1519.7656 C2436.5313,1519.9063 2436.7656,1520.0156 2436.9844,1520.0156 C2437.25,1520.0156 2437.5156,1519.875 2437.6875,1519.6563 C2437.7969,1519.5 2437.8281,1519.3125 2437.8281,1518.8906 L2437.8281,1517.4688 C2437.8281,1517.0313 2437.8125,1516.9063 2437.7188,1516.75 C2437.5625,1516.4844 2437.2813,1516.3438 2436.9844,1516.3438 C2436.6875,1516.3438 2436.4844,1516.4375 2436.2656,1516.75 L2436.0938,1516.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="54" x="2454.25" y="1525.1543">Segment</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2268.5" x2="2661.5" y1="1537" y2="1537"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2275.5" y="1545"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="2287.5" y="1551.2104">_start: Point</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2275.5" y="1557.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2287.5" y="1564.0151">_end: Point</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2275.5" y="1570.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="2287.5" y="1576.8198">_tangent: Vector2d</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2268.5" x2="2661.5" y1="1583.4141" y2="1583.4141"/><ellipse cx="2278.5" cy="1594.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="2287.5" y="1597.6245">Segment(start = Point(): const Point&amp;,end = Point(): const Point&amp;)</text><ellipse cx="2278.5" cy="1607.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="2287.5" y="1610.4292">void SetStart(start: const Point&amp;)</text><ellipse cx="2278.5" cy="1620.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="2287.5" y="1623.2339">const Point&amp; GetStart() const</text><ellipse cx="2278.5" cy="1632.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="2287.5" y="1636.0386">Point&amp; GetStart() const</text><ellipse cx="2278.5" cy="1645.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="2287.5" y="1648.8433">void SetEnd(end: const Point&amp;)</text><ellipse cx="2278.5" cy="1658.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="2287.5" y="1661.6479">const Point&amp; GetEnd() const</text><ellipse cx="2278.5" cy="1671.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2287.5" y="1674.4526">Point&amp; GetEnd()</text><ellipse cx="2278.5" cy="1684.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="2287.5" y="1687.2573">void SetSegment(start: const Point&amp;, end: const Point&amp;)</text><ellipse cx="2278.5" cy="1696.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="2287.5" y="1700.062">const Vector2d ComputeTangent()</text><ellipse cx="2278.5" cy="1709.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="2287.5" y="1712.8667">const Vector2d GetTangent() const</text><ellipse cx="2278.5" cy="1722.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="2287.5" y="1725.6714">int PointOnTheRightSide(point: const Point&amp;) const</text><!--MD5=[b7dfa3cc8c25241eecc6058e881a4b4e]
class IPolygon--><rect codeLine="66" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="265.6797" id="IPolygon" style="stroke:#A80036;stroke-width:1.5;" width="418" x="1455" y="1889.5"/><ellipse cx="1634.25" cy="1905.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1635.2031,1902.2813 L1636.9219,1902.2813 C1637.3125,1902.2813 1637.5,1902.25 1637.625,1902.1719 C1637.8906,1902.0156 1638.0313,1901.7344 1638.0313,1901.4375 C1638.0313,1901.1719 1637.9219,1900.9063 1637.6875,1900.7344 C1637.5156,1900.625 1637.375,1900.5938 1636.9219,1900.5938 L1631.7813,1900.5938 C1631.3438,1900.5938 1631.2188,1900.6094 1631.0625,1900.7031 C1630.8125,1900.8594 1630.6563,1901.1563 1630.6563,1901.4375 C1630.6563,1901.7188 1630.7969,1901.9688 1631.0156,1902.1406 C1631.1719,1902.25 1631.3594,1902.2813 1631.7813,1902.2813 L1633.5,1902.2813 L1633.5,1908.7969 L1631.7813,1908.7969 C1631.3438,1908.7969 1631.2188,1908.8125 1631.0625,1908.9219 C1630.8125,1909.0781 1630.6563,1909.3594 1630.6563,1909.6563 C1630.6563,1909.9063 1630.7969,1910.1719 1631.0156,1910.3281 C1631.1719,1910.4531 1631.375,1910.5 1631.7813,1910.5 L1636.9219,1910.5 C1637.6719,1910.5 1638.0313,1910.2188 1638.0313,1909.6563 C1638.0313,1909.375 1637.9219,1909.125 1637.6875,1908.9531 C1637.5156,1908.8281 1637.375,1908.7969 1636.9219,1908.7969 L1635.2031,1908.7969 L1635.2031,1902.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="51" x="1654.75" y="1909.6543">IPolygon</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1456" x2="1872" y1="1921.5" y2="1921.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1456" x2="1872" y1="1929.5" y2="1929.5"/><ellipse cx="1466" cy="1940.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1475" y="1943.7104">unsigned int  GetNumberVertices() const</text><ellipse cx="1466" cy="1953.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="1475" y="1956.5151">const vector&lt;Point&gt;&amp; GetVertices() const</text><ellipse cx="1466" cy="1966.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="1475" y="1969.3198">void SetVertexAtPosition(point: const Point&amp;, position: const int&amp;)</text><ellipse cx="1466" cy="1978.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="1475" y="1982.1245">void AppendVertex(point: const Point&amp;)</text><ellipse cx="1466" cy="1991.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="1475" y="1994.9292">void InsertVertexAtPosition(vertex: const Point&amp;, position: const int&amp;)</text><ellipse cx="1466" cy="2004.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="1475" y="2007.7339">const Point&amp; GetVertexAtPosition(position: const int&amp;) const</text><ellipse cx="1466" cy="2017.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1475" y="2020.5386">int NextVertexId(id: unsigned int) const</text><ellipse cx="1466" cy="2030.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="1475" y="2033.3433">const Point&amp; GetLastVertex() const</text><ellipse cx="1466" cy="2042.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1475" y="2046.1479">double ComputeArea() const</text><ellipse cx="1466" cy="2055.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="1475" y="2058.9526">const vector&lt;Segment&gt;&amp; GetEdges() const</text><ellipse cx="1466" cy="2068.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="1475" y="2071.7573">void SetVertexLAbelAtPosition(position: const int&amp;, label: int)</text><ellipse cx="1466" cy="2081.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="1475" y="2084.562">int GetPointLabelAtPosition(position: const int&amp;) const</text><ellipse cx="1466" cy="2094.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="1475" y="2097.3667">void SetVertexLabels(polygonVertices: vector&lt;unsigned int&gt;)</text><ellipse cx="1466" cy="2106.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1475" y="2110.1714">void SetDefaultVertexLabels()</text><ellipse cx="1466" cy="2119.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1475" y="2122.9761">bool PointInPolygon(point: const Point&amp;)</text><ellipse cx="1466" cy="2132.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="1475" y="2135.7808">int IsPolygonOnThteRightSide(line: const Segment&amp;) const</text><ellipse cx="1466" cy="2145.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1475" y="2148.5854">void BuildUpPolygonEdges()</text><!--MD5=[129471aa5ea5c93eb409af5033b83b34]
class Polygon--><rect codeLine="86" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="329.7031" id="Polygon" style="stroke:#A80036;stroke-width:1.5;" width="418" x="1968" y="1034"/><ellipse cx="2149.25" cy="1050" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2151.5938,1045.6719 C2150.6563,1045.2344 2150.0625,1045.0938 2149.1875,1045.0938 C2146.5625,1045.0938 2144.5625,1047.1719 2144.5625,1049.8906 L2144.5625,1051.0156 C2144.5625,1053.5938 2146.6719,1055.4844 2149.5625,1055.4844 C2150.7813,1055.4844 2151.9375,1055.1875 2152.6875,1054.6406 C2153.2656,1054.2344 2153.5938,1053.7813 2153.5938,1053.3906 C2153.5938,1052.9375 2153.2031,1052.5469 2152.7344,1052.5469 C2152.5156,1052.5469 2152.3125,1052.625 2152.125,1052.8125 C2151.6719,1053.2969 2151.6719,1053.2969 2151.4844,1053.3906 C2151.0625,1053.6563 2150.375,1053.7813 2149.6094,1053.7813 C2147.5625,1053.7813 2146.2656,1052.6875 2146.2656,1050.9844 L2146.2656,1049.8906 C2146.2656,1048.1094 2147.5156,1046.7969 2149.25,1046.7969 C2149.8281,1046.7969 2150.4375,1046.9531 2150.9063,1047.2031 C2151.3906,1047.4844 2151.5625,1047.7031 2151.6563,1048.1094 C2151.7188,1048.5156 2151.75,1048.6406 2151.8906,1048.7656 C2152.0313,1048.9063 2152.2656,1049.0156 2152.4844,1049.0156 C2152.75,1049.0156 2153.0156,1048.875 2153.1875,1048.6563 C2153.2969,1048.5 2153.3281,1048.3125 2153.3281,1047.8906 L2153.3281,1046.4688 C2153.3281,1046.0313 2153.3125,1045.9063 2153.2188,1045.75 C2153.0625,1045.4844 2152.7813,1045.3438 2152.4844,1045.3438 C2152.1875,1045.3438 2151.9844,1045.4375 2151.7656,1045.75 L2151.5938,1045.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="2169.75" y="1054.1543">Polygon</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1969" x2="2385" y1="1066" y2="1066"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1976" y="1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1988" y="1080.2104">_numberVertices: unsigned int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1976" y="1086.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="1988" y="1093.0151">_vertices: vector&lt;Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1976" y="1099.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="1988" y="1105.8198">_edges: vector&lt;Segment&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1969" x2="2385" y1="1112.4141" y2="1112.4141"/><ellipse cx="1979" cy="1123.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="52" x="1988" y="1126.6245">Polygon()</text><ellipse cx="1979" cy="1136.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1988" y="1139.4292">Polygon(vertices: const vector&lt;Point&gt;&amp;)</text><ellipse cx="1979" cy="1149.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1988" y="1152.2339">unsigned int  GetNumberVertices() const</text><ellipse cx="1979" cy="1161.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="1988" y="1165.0386">const vector&lt;Point&gt;&amp; GetVertices() const</text><ellipse cx="1979" cy="1174.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="1988" y="1177.8433">void SetVertexAtPosition(point: const Point&amp;, position: const int&amp;)</text><ellipse cx="1979" cy="1187.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="1988" y="1190.6479">void AppendVertex(point: const Point&amp;)</text><ellipse cx="1979" cy="1200.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="1988" y="1203.4526">void InsertVertexAtPosition(vertex: const Point&amp;, position: const int&amp;)</text><ellipse cx="1979" cy="1213.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="1988" y="1216.2573">const Point&amp; GetVertexAtPosition(position: const int&amp;) const</text><ellipse cx="1979" cy="1225.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1988" y="1229.062">int NextVertexId(id: unsigned int) const</text><ellipse cx="1979" cy="1238.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="1988" y="1241.8667">const Point&amp; GetLastVertex() const</text><ellipse cx="1979" cy="1251.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1988" y="1254.6714">double ComputeArea() const</text><ellipse cx="1979" cy="1264.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="1988" y="1267.4761">const vector&lt;Segment&gt;&amp; GetEdges() const</text><ellipse cx="1979" cy="1277.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="1988" y="1280.2808">void SetVertexLAbelAtPosition(position: const int&amp;, label: int)</text><ellipse cx="1979" cy="1289.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="1988" y="1293.0854">int GetPointLabelAtPosition(position: const int&amp;) const</text><ellipse cx="1979" cy="1302.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="1988" y="1305.8901">void SetVertexLabels(polygonVertices: vector&lt;unsigned int&gt;)</text><ellipse cx="1979" cy="1315.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1988" y="1318.6948">void SetDefaultVertexLabels()</text><ellipse cx="1979" cy="1328.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1988" y="1331.4995">bool PointInPolygon(point: const Point&amp;)</text><ellipse cx="1979" cy="1341.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="1988" y="1344.3042">int IsPolygonOnThteRightSide(line: const Segment&amp;) const</text><ellipse cx="1979" cy="1353.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1988" y="1357.1089">void BuildUpPolygonEdges()</text><!--MD5=[d36af9fb560448b04316dfcf126897aa]
class IIntersector1D1D--><rect codeLine="111" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="240.0703" id="IIntersector1D1D" style="stroke:#A80036;stroke-width:1.5;" width="573" x="720.5" y="1902.5"/><ellipse cx="950.75" cy="1918.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M951.7031,1915.2813 L953.4219,1915.2813 C953.8125,1915.2813 954,1915.25 954.125,1915.1719 C954.3906,1915.0156 954.5313,1914.7344 954.5313,1914.4375 C954.5313,1914.1719 954.4219,1913.9063 954.1875,1913.7344 C954.0156,1913.625 953.875,1913.5938 953.4219,1913.5938 L948.2813,1913.5938 C947.8438,1913.5938 947.7188,1913.6094 947.5625,1913.7031 C947.3125,1913.8594 947.1563,1914.1563 947.1563,1914.4375 C947.1563,1914.7188 947.2969,1914.9688 947.5156,1915.1406 C947.6719,1915.25 947.8594,1915.2813 948.2813,1915.2813 L950,1915.2813 L950,1921.7969 L948.2813,1921.7969 C947.8438,1921.7969 947.7188,1921.8125 947.5625,1921.9219 C947.3125,1922.0781 947.1563,1922.3594 947.1563,1922.6563 C947.1563,1922.9063 947.2969,1923.1719 947.5156,1923.3281 C947.6719,1923.4531 947.875,1923.5 948.2813,1923.5 L953.4219,1923.5 C954.1719,1923.5 954.5313,1923.2188 954.5313,1922.6563 C954.5313,1922.375 954.4219,1922.125 954.1875,1921.9531 C954.0156,1921.8281 953.875,1921.7969 953.4219,1921.7969 L951.7031,1921.7969 L951.7031,1915.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="104" x="971.25" y="1922.6543">IIntersector1D1D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="721.5" x2="1292.5" y1="1934.5" y2="1934.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="721.5" x2="1292.5" y1="1942.5" y2="1942.5"/><ellipse cx="731.5" cy="1953.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="740.5" y="1956.7104">void SetToleranceParallelism(const double&amp; _tolerance)</text><ellipse cx="731.5" cy="1966.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="740.5" y="1969.5151">void SetToleranceIntersection(const double&amp; _tolerance)</text><ellipse cx="731.5" cy="1979.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="740.5" y="1982.3198">void SetFirstSegment(const Vector2d&amp; origin, const Vector2d&amp; end)</text><ellipse cx="731.5" cy="1991.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="740.5" y="1995.1245">void SetSecondSegment(const Vector2d&amp; origin, const Vector2d&amp; end)</text><ellipse cx="731.5" cy="2004.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="740.5" y="2007.9292">const bool ComputeIntersection();</text><ellipse cx="731.5" cy="2017.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="740.5" y="2020.7339">const double&amp; ToleranceIntersection() const</text><ellipse cx="731.5" cy="2030.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="740.5" y="2033.5386">const double&amp; ToleranceParallelism() const</text><ellipse cx="731.5" cy="2043.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="740.5" y="2046.3433">const Vector2d&amp; ParametricCoordinates()</text><ellipse cx="731.5" cy="2055.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="740.5" y="2059.1479">const double&amp; FirstParametricCoordinate()</text><ellipse cx="731.5" cy="2068.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="740.5" y="2071.9526">const double&amp; SecondParametricCoordinate()</text><ellipse cx="731.5" cy="2081.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="740.5" y="2084.7573">const Position&amp; PositionIntersectionInFirstEdge()</text><ellipse cx="731.5" cy="2094.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="740.5" y="2097.562">const Position&amp; PositionIntersectionInSecondEdge()</text><ellipse cx="731.5" cy="2107.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="740.5" y="2110.3667">const Type&amp; TypeIntersection()</text><ellipse cx="731.5" cy="2119.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="527" x="740.5" y="2123.1714">Vector2d IntersectionFirstParametricCoordinate(const Vector2d&amp; origin,const Vector2d&amp; end)</text><ellipse cx="731.5" cy="2132.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="547" x="740.5" y="2135.9761">Vector2d IntersectionSecondParametricCoordinate(const Vector2d&amp; origin,const Vector2d&amp; end)</text><!--MD5=[9125bdce7f0a5581c77b3be016eeae78]
class Intersector1D1D--><rect codeLine="130" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="355.3125" id="Intersector1D1D" style="stroke:#A80036;stroke-width:1.5;" width="573" x="342.5" y="1441"/><ellipse cx="575.75" cy="1457" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M578.0938,1452.6719 C577.1563,1452.2344 576.5625,1452.0938 575.6875,1452.0938 C573.0625,1452.0938 571.0625,1454.1719 571.0625,1456.8906 L571.0625,1458.0156 C571.0625,1460.5938 573.1719,1462.4844 576.0625,1462.4844 C577.2813,1462.4844 578.4375,1462.1875 579.1875,1461.6406 C579.7656,1461.2344 580.0938,1460.7813 580.0938,1460.3906 C580.0938,1459.9375 579.7031,1459.5469 579.2344,1459.5469 C579.0156,1459.5469 578.8125,1459.625 578.625,1459.8125 C578.1719,1460.2969 578.1719,1460.2969 577.9844,1460.3906 C577.5625,1460.6563 576.875,1460.7813 576.1094,1460.7813 C574.0625,1460.7813 572.7656,1459.6875 572.7656,1457.9844 L572.7656,1456.8906 C572.7656,1455.1094 574.0156,1453.7969 575.75,1453.7969 C576.3281,1453.7969 576.9375,1453.9531 577.4063,1454.2031 C577.8906,1454.4844 578.0625,1454.7031 578.1563,1455.1094 C578.2188,1455.5156 578.25,1455.6406 578.3906,1455.7656 C578.5313,1455.9063 578.7656,1456.0156 578.9844,1456.0156 C579.25,1456.0156 579.5156,1455.875 579.6875,1455.6563 C579.7969,1455.5 579.8281,1455.3125 579.8281,1454.8906 L579.8281,1453.4688 C579.8281,1453.0313 579.8125,1452.9063 579.7188,1452.75 C579.5625,1452.4844 579.2813,1452.3438 578.9844,1452.3438 C578.6875,1452.3438 578.4844,1452.4375 578.2656,1452.75 L578.0938,1452.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="596.25" y="1461.1543">Intersector1D1D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="914.5" y1="1473" y2="1473"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1481"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="362.5" y="1487.2104">positionIntersectionFirstEdge: Position</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1493.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="362.5" y="1500.0151">positionIntersectionSecondEdge: Position</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1506.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="362.5" y="1512.8198">resultParametricCoordinates: Vector2d</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1519.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="362.5" y="1525.6245">originFirstSegment: Vector2d</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1532.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="362.5" y="1538.4292">rightHandSide: Vector2d</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="1545.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="362.5" y="1551.2339">matrixTangentVector: Matrix2d</text><ellipse cx="353.5" cy="1560.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="362.5" y="1564.0386">type: Type</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="914.5" y1="1570.6328" y2="1570.6328"/><ellipse cx="353.5" cy="1581.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="362.5" y="1584.8433">Intersector1D1D()</text><ellipse cx="353.5" cy="1594.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="362.5" y="1597.6479">~Intersector1D1D()</text><ellipse cx="353.5" cy="1607.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="362.5" y="1610.4526">void SetToleranceParallelism(const double&amp; _tolerance)</text><ellipse cx="353.5" cy="1620.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="362.5" y="1623.2573">void SetToleranceIntersection(const double&amp; _tolerance)</text><ellipse cx="353.5" cy="1632.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="362.5" y="1636.062">void SetFirstSegment(const Vector2d&amp; origin, const Vector2d&amp; end)</text><ellipse cx="353.5" cy="1645.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="362.5" y="1648.8667">void SetSecondSegment(const Vector2d&amp; origin, const Vector2d&amp; end)</text><ellipse cx="353.5" cy="1658.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="362.5" y="1661.6714">const bool ComputeIntersection();</text><ellipse cx="353.5" cy="1671.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="362.5" y="1674.4761">const double&amp; ToleranceIntersection() const</text><ellipse cx="353.5" cy="1684.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="362.5" y="1687.2808">const double&amp; ToleranceParallelism() const</text><ellipse cx="353.5" cy="1696.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="362.5" y="1700.0854">const Vector2d&amp; ParametricCoordinates()</text><ellipse cx="353.5" cy="1709.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="362.5" y="1712.8901">const double&amp; FirstParametricCoordinate()</text><ellipse cx="353.5" cy="1722.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="362.5" y="1725.6948">const double&amp; SecondParametricCoordinate()</text><ellipse cx="353.5" cy="1735.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="362.5" y="1738.4995">const Position&amp; PositionIntersectionInFirstEdge()</text><ellipse cx="353.5" cy="1748.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="362.5" y="1751.3042">const Position&amp; PositionIntersectionInSecondEdge()</text><ellipse cx="353.5" cy="1760.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="362.5" y="1764.1089">const Type&amp; TypeIntersection()</text><ellipse cx="353.5" cy="1773.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="527" x="362.5" y="1776.9136">Vector2d IntersectionFirstParametricCoordinate(const Vector2d&amp; origin,const Vector2d&amp; end)</text><ellipse cx="353.5" cy="1786.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="547" x="362.5" y="1789.7183">Vector2d IntersectionSecondParametricCoordinate(const Vector2d&amp; origin,const Vector2d&amp; end)</text><!--MD5=[be6661c4dffe0f8ef4c96d1e26de9df8]
class IIntersectorPolygonLine--><rect codeLine="157" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="137.6328" id="IIntersectorPolygonLine" style="stroke:#A80036;stroke-width:1.5;" width="879" x="950.5" y="1549.5"/><ellipse cx="1314.75" cy="1565.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1315.7031,1562.2813 L1317.4219,1562.2813 C1317.8125,1562.2813 1318,1562.25 1318.125,1562.1719 C1318.3906,1562.0156 1318.5313,1561.7344 1318.5313,1561.4375 C1318.5313,1561.1719 1318.4219,1560.9063 1318.1875,1560.7344 C1318.0156,1560.625 1317.875,1560.5938 1317.4219,1560.5938 L1312.2813,1560.5938 C1311.8438,1560.5938 1311.7188,1560.6094 1311.5625,1560.7031 C1311.3125,1560.8594 1311.1563,1561.1563 1311.1563,1561.4375 C1311.1563,1561.7188 1311.2969,1561.9688 1311.5156,1562.1406 C1311.6719,1562.25 1311.8594,1562.2813 1312.2813,1562.2813 L1314,1562.2813 L1314,1568.7969 L1312.2813,1568.7969 C1311.8438,1568.7969 1311.7188,1568.8125 1311.5625,1568.9219 C1311.3125,1569.0781 1311.1563,1569.3594 1311.1563,1569.6563 C1311.1563,1569.9063 1311.2969,1570.1719 1311.5156,1570.3281 C1311.6719,1570.4531 1311.875,1570.5 1312.2813,1570.5 L1317.4219,1570.5 C1318.1719,1570.5 1318.5313,1570.2188 1318.5313,1569.6563 C1318.5313,1569.375 1318.4219,1569.125 1318.1875,1568.9531 C1318.0156,1568.8281 1317.875,1568.7969 1317.4219,1568.7969 L1315.7031,1568.7969 L1315.7031,1562.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="142" x="1335.25" y="1569.6543">IIntersectorPolygonLine</text><line style="stroke:#A80036;stroke-width:1.5;" x1="951.5" x2="1828.5" y1="1581.5" y2="1581.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="951.5" x2="1828.5" y1="1589.5" y2="1589.5"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="958.5" y="1597.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="614" x="970.5" y="1603.7104">bool CheckInConicCombination(line: const Vector2d, v1: const Vector2d, v2: const Vector2d, flag: int&amp;) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="958.5" y="1610.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="853" x="970.5" y="1616.5151">void ExtendedPolygonIfEndpointsOnEdge(numpoly: int&amp;, firstIntersectionId: const int&amp;, secondIntersectionId: const int&amp;, forwardDirection: const bool&amp;)</text><ellipse cx="961.5" cy="1626.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="970.5" y="1629.3198">const vector&lt;Point&gt;&amp; FindIntersectionVertices()</text><ellipse cx="961.5" cy="1638.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="970.5" y="1642.1245">const vector&lt;Polygon&gt;&amp; FindPolygons()</text><ellipse cx="961.5" cy="1651.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="970.5" y="1654.9292">const vector&lt;Polygon&gt;&amp; GetExtendedPolygons()</text><ellipse cx="961.5" cy="1664.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="970.5" y="1667.7339">const vector&lt;Point&gt;&amp; FindNewPoints()</text><ellipse cx="961.5" cy="1677.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="970.5" y="1680.5386">bool GetstartFound() const</text><!--MD5=[8d9d4022b83ad978f0c85d4ecdc8e25e]
class IntersectorPolygonLine--><rect codeLine="167" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="368.1172" id="IntersectorPolygonLine" style="stroke:#A80036;stroke-width:1.5;" width="879" x="342.5" y="589"/><ellipse cx="709.25" cy="605" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M711.5938,600.6719 C710.6563,600.2344 710.0625,600.0938 709.1875,600.0938 C706.5625,600.0938 704.5625,602.1719 704.5625,604.8906 L704.5625,606.0156 C704.5625,608.5938 706.6719,610.4844 709.5625,610.4844 C710.7813,610.4844 711.9375,610.1875 712.6875,609.6406 C713.2656,609.2344 713.5938,608.7813 713.5938,608.3906 C713.5938,607.9375 713.2031,607.5469 712.7344,607.5469 C712.5156,607.5469 712.3125,607.625 712.125,607.8125 C711.6719,608.2969 711.6719,608.2969 711.4844,608.3906 C711.0625,608.6563 710.375,608.7813 709.6094,608.7813 C707.5625,608.7813 706.2656,607.6875 706.2656,605.9844 L706.2656,604.8906 C706.2656,603.1094 707.5156,601.7969 709.25,601.7969 C709.8281,601.7969 710.4375,601.9531 710.9063,602.2031 C711.3906,602.4844 711.5625,602.7031 711.6563,603.1094 C711.7188,603.5156 711.75,603.6406 711.8906,603.7656 C712.0313,603.9063 712.2656,604.0156 712.4844,604.0156 C712.75,604.0156 713.0156,603.875 713.1875,603.6563 C713.2969,603.5 713.3281,603.3125 713.3281,602.8906 L713.3281,601.4688 C713.3281,601.0313 713.3125,600.9063 713.2188,600.75 C713.0625,600.4844 712.7813,600.3438 712.4844,600.3438 C712.1875,600.3438 711.9844,600.4375 711.7656,600.75 L711.5938,600.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="137" x="729.75" y="609.1543">IntersectorPolygonLine</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="1220.5" y1="621" y2="621"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="629"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="362.5" y="635.2104">_intersector: IIntersector1D1D&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="641.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="362.5" y="648.0151">_polygon: IPolygon&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="654.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="362.5" y="660.8198">_line: ISegment&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="667.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="362.5" y="673.6245">_intersectionVertices: vector&lt;Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="680.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="362.5" y="686.4292">_newPoints: vector&lt;Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="693.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="362.5" y="699.2339">_extendedNewPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="705.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="362.5" y="712.0386">_newPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="718.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="362.5" y="724.8433">_intersectionIdToSegmentId: vector&lt;int&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="731.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="362.5" y="737.6479">_segmentIdToIntersectionId: vector&lt;int&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="744.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="362.5" y="750.4526">_foundVertex: vector&lt;bool&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="757.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="362.5" y="763.2573">_startFound = false: bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="769.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="362.5" y="776.062">_endFound = false: bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="782.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="362.5" y="788.8667">_flag: vector&lt;int&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="795.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="423" x="362.5" y="801.6714">_mmapParametricCoordinateToIntersectionPoint: multimap&lt;double, Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="808.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="362.5" y="814.4761">_mmapParametricCoordinateToSegmentId: multimap&lt;double, int&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="821.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="362.5" y="827.2808">_mapSegmentIdToParametricCoordinate: map&lt;int, double&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="833.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="362.5" y="840.0854">_mapIntersectionIdToParametricCoordinate: map&lt;int,double&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="846.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="362.5" y="852.8901">_parallelIntersections: vector&lt;bool&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="1220.5" y1="859.4844" y2="859.4844"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="867.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="614" x="362.5" y="873.6948">bool CheckInConicCombination(line: const Vector2d, v1: const Vector2d, v2: const Vector2d, flag: int&amp;) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="350.5" y="880.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="853" x="362.5" y="886.4995">void ExtendedPolygonIfEndpointsOnEdge(numpoly: int&amp;, firstIntersectionId: const int&amp;, secondIntersectionId: const int&amp;, forwardDirection: const bool&amp;)</text><ellipse cx="353.5" cy="896.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="362.5" y="899.3042">const vector&lt;Point&gt;&amp; FindIntersectionVertices()</text><ellipse cx="353.5" cy="908.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="362.5" y="912.1089">const vector&lt;Polygon&gt;&amp; FindPolygons()</text><ellipse cx="353.5" cy="921.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="362.5" y="924.9136">const vector&lt;Polygon&gt;&amp; GetExtendedPolygons()</text><ellipse cx="353.5" cy="934.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="362.5" y="937.7183">const vector&lt;Point&gt;&amp; FindNewPoints()</text><ellipse cx="353.5" cy="947.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="362.5" y="950.5229">bool GetstartFound() const</text><!--MD5=[8414bdad8f14370851de8fb876450197]
class IReferenceElement--><rect codeLine="194" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="201.6563" id="IReferenceElement" style="stroke:#A80036;stroke-width:1.5;" width="405" x="2421.5" y="1098"/><ellipse cx="2562.75" cy="1114" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2563.7031,1110.7813 L2565.4219,1110.7813 C2565.8125,1110.7813 2566,1110.75 2566.125,1110.6719 C2566.3906,1110.5156 2566.5313,1110.2344 2566.5313,1109.9375 C2566.5313,1109.6719 2566.4219,1109.4063 2566.1875,1109.2344 C2566.0156,1109.125 2565.875,1109.0938 2565.4219,1109.0938 L2560.2813,1109.0938 C2559.8438,1109.0938 2559.7188,1109.1094 2559.5625,1109.2031 C2559.3125,1109.3594 2559.1563,1109.6563 2559.1563,1109.9375 C2559.1563,1110.2188 2559.2969,1110.4688 2559.5156,1110.6406 C2559.6719,1110.75 2559.8594,1110.7813 2560.2813,1110.7813 L2562,1110.7813 L2562,1117.2969 L2560.2813,1117.2969 C2559.8438,1117.2969 2559.7188,1117.3125 2559.5625,1117.4219 C2559.3125,1117.5781 2559.1563,1117.8594 2559.1563,1118.1563 C2559.1563,1118.4063 2559.2969,1118.6719 2559.5156,1118.8281 C2559.6719,1118.9531 2559.875,1119 2560.2813,1119 L2565.4219,1119 C2566.1719,1119 2566.5313,1118.7188 2566.5313,1118.1563 C2566.5313,1117.875 2566.4219,1117.625 2566.1875,1117.4531 C2566.0156,1117.3281 2565.875,1117.2969 2565.4219,1117.2969 L2563.7031,1117.2969 L2563.7031,1110.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="114" x="2583.25" y="1118.1543">IReferenceElement</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2422.5" x2="2825.5" y1="1130" y2="1130"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2422.5" x2="2825.5" y1="1138" y2="1138"/><ellipse cx="2432.5" cy="1149" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="2441.5" y="1152.2104">void computeBoundingBox(Polygon&amp; polygon)</text><ellipse cx="2432.5" cy="1161.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="2441.5" y="1165.0151">void computeReferenceElement(Polygon&amp; polygon)</text><ellipse cx="2432.5" cy="1174.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="2441.5" y="1177.8198">const vector&lt;Point&gt;&amp; getBoundingBoxVertices() const</text><ellipse cx="2432.5" cy="1187.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="2441.5" y="1190.6245">const vector&lt;Polygon&gt;&amp; getReferenceElement() const</text><ellipse cx="2432.5" cy="1200.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="2441.5" y="1203.4292">const Point&amp; getBoundingBoxVertexAtPosition(unsigned int&amp; i)</text><ellipse cx="2432.5" cy="1213.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="2441.5" y="1216.2339">void findBoundaryVertices()</text><ellipse cx="2432.5" cy="1225.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="2441.5" y="1229.0386">const map&lt;double, Point&gt;&amp; getMapSouthXCoordinates() const</text><ellipse cx="2432.5" cy="1238.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="2441.5" y="1241.8433">const map&lt;double, Point&gt;&amp; getMapNorthXCoordinates() const</text><ellipse cx="2432.5" cy="1251.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="2441.5" y="1254.6479">const map&lt;double, Point&gt;&amp; getMapEastYCoordinates() const</text><ellipse cx="2432.5" cy="1264.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="2441.5" y="1267.4526">const map&lt;double, Point&gt;&amp; getMapWestYCoordinates() const</text><ellipse cx="2432.5" cy="1277.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2441.5" y="1280.2573">void makeConforming()</text><ellipse cx="2432.5" cy="1289.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="2441.5" y="1293.062">const vector&lt;Polygon&gt;&amp; getConformingReferenceElement() const</text><!--MD5=[716fd6d92bda7e5cc69ca3c95c926315]
class IPolygonCutter--><rect codeLine="209" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="112.0234" id="IPolygonCutter" style="stroke:#A80036;stroke-width:1.5;" width="363" x="1569.5" y="1143"/><ellipse cx="1702.25" cy="1159" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1703.2031,1155.7813 L1704.9219,1155.7813 C1705.3125,1155.7813 1705.5,1155.75 1705.625,1155.6719 C1705.8906,1155.5156 1706.0313,1155.2344 1706.0313,1154.9375 C1706.0313,1154.6719 1705.9219,1154.4063 1705.6875,1154.2344 C1705.5156,1154.125 1705.375,1154.0938 1704.9219,1154.0938 L1699.7813,1154.0938 C1699.3438,1154.0938 1699.2188,1154.1094 1699.0625,1154.2031 C1698.8125,1154.3594 1698.6563,1154.6563 1698.6563,1154.9375 C1698.6563,1155.2188 1698.7969,1155.4688 1699.0156,1155.6406 C1699.1719,1155.75 1699.3594,1155.7813 1699.7813,1155.7813 L1701.5,1155.7813 L1701.5,1162.2969 L1699.7813,1162.2969 C1699.3438,1162.2969 1699.2188,1162.3125 1699.0625,1162.4219 C1698.8125,1162.5781 1698.6563,1162.8594 1698.6563,1163.1563 C1698.6563,1163.4063 1698.7969,1163.6719 1699.0156,1163.8281 C1699.1719,1163.9531 1699.375,1164 1699.7813,1164 L1704.9219,1164 C1705.6719,1164 1706.0313,1163.7188 1706.0313,1163.1563 C1706.0313,1162.875 1705.9219,1162.625 1705.6875,1162.4531 C1705.5156,1162.3281 1705.375,1162.2969 1704.9219,1162.2969 L1703.2031,1162.2969 L1703.2031,1155.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="89" x="1722.75" y="1163.1543">IPolygonCutter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1570.5" x2="1931.5" y1="1175" y2="1175"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1570.5" x2="1931.5" y1="1183" y2="1183"/><ellipse cx="1580.5" cy="1194" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1589.5" y="1197.2104">const vector&lt;Polygon&gt;&amp; cutPolygon()</text><ellipse cx="1580.5" cy="1206.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="1589.5" y="1210.0151">const vector&lt;Polygon&gt;&amp; getCuttedPolygons() const</text><ellipse cx="1580.5" cy="1219.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1589.5" y="1222.8198">const vector&lt;Point&gt;&amp; getIntersectionVertices() const</text><ellipse cx="1580.5" cy="1232.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1589.5" y="1235.6245">const vector&lt;Point&gt;&amp; getNewPoints() const</text><ellipse cx="1580.5" cy="1245.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="1589.5" y="1248.4292">void showPolygon(filePath = "showPolygon.m": const string)</text><!--MD5=[34945c3b2cb2dacb63cd3a31c348fa98]
class PolygonCutter--><rect codeLine="217" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="201.6563" id="PolygonCutter" style="stroke:#A80036;stroke-width:1.5;" width="363" x="2023.5" y="672"/><ellipse cx="2159.25" cy="688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2161.5938,683.6719 C2160.6563,683.2344 2160.0625,683.0938 2159.1875,683.0938 C2156.5625,683.0938 2154.5625,685.1719 2154.5625,687.8906 L2154.5625,689.0156 C2154.5625,691.5938 2156.6719,693.4844 2159.5625,693.4844 C2160.7813,693.4844 2161.9375,693.1875 2162.6875,692.6406 C2163.2656,692.2344 2163.5938,691.7813 2163.5938,691.3906 C2163.5938,690.9375 2163.2031,690.5469 2162.7344,690.5469 C2162.5156,690.5469 2162.3125,690.625 2162.125,690.8125 C2161.6719,691.2969 2161.6719,691.2969 2161.4844,691.3906 C2161.0625,691.6563 2160.375,691.7813 2159.6094,691.7813 C2157.5625,691.7813 2156.2656,690.6875 2156.2656,688.9844 L2156.2656,687.8906 C2156.2656,686.1094 2157.5156,684.7969 2159.25,684.7969 C2159.8281,684.7969 2160.4375,684.9531 2160.9063,685.2031 C2161.3906,685.4844 2161.5625,685.7031 2161.6563,686.1094 C2161.7188,686.5156 2161.75,686.6406 2161.8906,686.7656 C2162.0313,686.9063 2162.2656,687.0156 2162.4844,687.0156 C2162.75,687.0156 2163.0156,686.875 2163.1875,686.6563 C2163.2969,686.5 2163.3281,686.3125 2163.3281,685.8906 L2163.3281,684.4688 C2163.3281,684.0313 2163.3125,683.9063 2163.2188,683.75 C2163.0625,683.4844 2162.7813,683.3438 2162.4844,683.3438 C2162.1875,683.3438 2161.9844,683.4375 2161.7656,683.75 L2161.5938,683.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="83" x="2179.75" y="692.1543">PolygonCutter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2024.5" x2="2385.5" y1="704" y2="704"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2043.5" y="718.2104">string _file;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="724.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="2043.5" y="731.0151">_intersector: IIntersectorPolygonLine&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="737.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="2043.5" y="743.8198">_polygon: IPolygon&amp; _polygon;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="750.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="2043.5" y="756.6245">ISegment&amp; _cutter;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="763.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="2043.5" y="769.4292">_cuttedPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="776.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="2043.5" y="782.2339">_intersectionVertices: vector&lt;Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2031.5" y="788.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="2043.5" y="795.0386">_newPoints: vector&lt;Point&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2024.5" x2="2385.5" y1="801.6328" y2="801.6328"/><ellipse cx="2034.5" cy="812.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="2043.5" y="815.8433">const vector&lt;Polygon&gt;&amp; cutPolygon()</text><ellipse cx="2034.5" cy="825.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="2043.5" y="828.6479">const vector&lt;Polygon&gt;&amp; getCuttedPolygons() const</text><ellipse cx="2034.5" cy="838.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="2043.5" y="841.4526">const vector&lt;Point&gt;&amp; getIntersectionVertices() const</text><ellipse cx="2034.5" cy="851.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="2043.5" y="854.2573">const vector&lt;Point&gt;&amp; getNewPoints() const</text><ellipse cx="2034.5" cy="863.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="2043.5" y="867.062">void showPolygon(filePath = "showPolygon.m": const string)</text><!--MD5=[5ab99c0984781341c790eed86eb3daf4]
class ReferenceElement--><rect codeLine="232" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="355.3125" id="ReferenceElement" style="stroke:#A80036;stroke-width:1.5;" width="405" x="2421.5" y="595.5"/><ellipse cx="2564.75" cy="611.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2567.0938,607.1719 C2566.1563,606.7344 2565.5625,606.5938 2564.6875,606.5938 C2562.0625,606.5938 2560.0625,608.6719 2560.0625,611.3906 L2560.0625,612.5156 C2560.0625,615.0938 2562.1719,616.9844 2565.0625,616.9844 C2566.2813,616.9844 2567.4375,616.6875 2568.1875,616.1406 C2568.7656,615.7344 2569.0938,615.2813 2569.0938,614.8906 C2569.0938,614.4375 2568.7031,614.0469 2568.2344,614.0469 C2568.0156,614.0469 2567.8125,614.125 2567.625,614.3125 C2567.1719,614.7969 2567.1719,614.7969 2566.9844,614.8906 C2566.5625,615.1563 2565.875,615.2813 2565.1094,615.2813 C2563.0625,615.2813 2561.7656,614.1875 2561.7656,612.4844 L2561.7656,611.3906 C2561.7656,609.6094 2563.0156,608.2969 2564.75,608.2969 C2565.3281,608.2969 2565.9375,608.4531 2566.4063,608.7031 C2566.8906,608.9844 2567.0625,609.2031 2567.1563,609.6094 C2567.2188,610.0156 2567.25,610.1406 2567.3906,610.2656 C2567.5313,610.4063 2567.7656,610.5156 2567.9844,610.5156 C2568.25,610.5156 2568.5156,610.375 2568.6875,610.1563 C2568.7969,610 2568.8281,609.8125 2568.8281,609.3906 L2568.8281,607.9688 C2568.8281,607.5313 2568.8125,607.4063 2568.7188,607.25 C2568.5625,606.9844 2568.2813,606.8438 2567.9844,606.8438 C2567.6875,606.8438 2567.4844,606.9375 2567.2656,607.25 L2567.0938,607.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="110" x="2585.25" y="615.6543">ReferenceElement</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2422.5" x2="2825.5" y1="627.5" y2="627.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="635.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="2441.5" y="641.7104">_boundingBoxVertices: vector&lt;Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="648.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="2441.5" y="654.5151">_referenceElementPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="661.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="2441.5" y="667.3198">_conformingReferenceElementPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="673.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="2441.5" y="680.1245">_boundingBox: Polygon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="686.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="2441.5" y="692.9292">_mapSouthXCoordinates: map&lt;double, Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="699.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="2441.5" y="705.7339">_mapNorthXCoordinates: map&lt;double, Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="712.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="2441.5" y="718.5386">_mapWestYCoordinates: map&lt;double, Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="725.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="2441.5" y="731.3433">_mapEastYCoordinates: map&lt;double, Point&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="737.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="2441.5" y="744.1479">_minX: double _</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="750.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="2441.5" y="756.9526">_minY: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="763.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="2441.5" y="769.7573">_maxX: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2429.5" y="776.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2441.5" y="782.562">_maxY: double</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2422.5" x2="2825.5" y1="789.1563" y2="789.1563"/><ellipse cx="2432.5" cy="800.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="2441.5" y="803.3667">void computeBoundingBox(Polygon&amp; polygon)</text><ellipse cx="2432.5" cy="812.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="2441.5" y="816.1714">void computeReferenceElement(Polygon&amp; polygon)</text><ellipse cx="2432.5" cy="825.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="2441.5" y="828.9761">const vector&lt;Point&gt;&amp; getBoundingBoxVertices() const</text><ellipse cx="2432.5" cy="838.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="2441.5" y="841.7808">const vector&lt;Polygon&gt;&amp; getReferenceElement() const</text><ellipse cx="2432.5" cy="851.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="2441.5" y="854.5854">const Point&amp; getBoundingBoxVertexAtPosition(unsigned int&amp; i)</text><ellipse cx="2432.5" cy="864.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="2441.5" y="867.3901">void findBoundaryVertices()</text><ellipse cx="2432.5" cy="876.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="2441.5" y="880.1948">const map&lt;double, Point&gt;&amp; getMapSouthXCoordinates() const</text><ellipse cx="2432.5" cy="889.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="2441.5" y="892.9995">const map&lt;double, Point&gt;&amp; getMapNorthXCoordinates() const</text><ellipse cx="2432.5" cy="902.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="2441.5" y="905.8042">const map&lt;double, Point&gt;&amp; getMapEastYCoordinates() const</text><ellipse cx="2432.5" cy="915.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="2441.5" y="918.6089">const map&lt;double, Point&gt;&amp; getMapWestYCoordinates() const</text><ellipse cx="2432.5" cy="928.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2441.5" y="931.4136">void makeConforming()</text><ellipse cx="2432.5" cy="941.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="2441.5" y="944.2183">const vector&lt;Polygon&gt;&amp; getConformingReferenceElement() const</text><!--MD5=[7a65883694c5982e0fa4c960248834df]
class IMesh--><rect codeLine="258" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="304.0938" id="IMesh" style="stroke:#A80036;stroke-width:1.5;" width="605" x="1383.5" y="621"/><ellipse cx="1664.25" cy="637" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1665.2031,633.7813 L1666.9219,633.7813 C1667.3125,633.7813 1667.5,633.75 1667.625,633.6719 C1667.8906,633.5156 1668.0313,633.2344 1668.0313,632.9375 C1668.0313,632.6719 1667.9219,632.4063 1667.6875,632.2344 C1667.5156,632.125 1667.375,632.0938 1666.9219,632.0938 L1661.7813,632.0938 C1661.3438,632.0938 1661.2188,632.1094 1661.0625,632.2031 C1660.8125,632.3594 1660.6563,632.6563 1660.6563,632.9375 C1660.6563,633.2188 1660.7969,633.4688 1661.0156,633.6406 C1661.1719,633.75 1661.3594,633.7813 1661.7813,633.7813 L1663.5,633.7813 L1663.5,640.2969 L1661.7813,640.2969 C1661.3438,640.2969 1661.2188,640.3125 1661.0625,640.4219 C1660.8125,640.5781 1660.6563,640.8594 1660.6563,641.1563 C1660.6563,641.4063 1660.7969,641.6719 1661.0156,641.8281 C1661.1719,641.9531 1661.375,642 1661.7813,642 L1666.9219,642 C1667.6719,642 1668.0313,641.7188 1668.0313,641.1563 C1668.0313,640.875 1667.9219,640.625 1667.6875,640.4531 C1667.5156,640.3281 1667.375,640.2969 1666.9219,640.2969 L1665.2031,640.2969 L1665.2031,633.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="35" x="1684.75" y="641.1543">IMesh</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1384.5" x2="1987.5" y1="653" y2="653"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1384.5" x2="1987.5" y1="661" y2="661"/><ellipse cx="1394.5" cy="672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1403.5" y="675.2104">void createMesh()</text><ellipse cx="1394.5" cy="684.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="579" x="1403.5" y="688.0151">ReferenceElement TranslateConformingReferenceElement(xTranslation: double,yTranslation: double)</text><ellipse cx="1394.5" cy="697.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="528" x="1403.5" y="700.8198">Polygon TranslatePolygon(polygon: const Polygon&amp;,xTranslation: double,yTranslation: double)</text><ellipse cx="1394.5" cy="710.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="418" x="1403.5" y="713.6245">void setRectangularDomain(length: const double&amp;,height: const double&amp;)</text><ellipse cx="1394.5" cy="723.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1403.5" y="726.4292">void setConvexDomain()</text><ellipse cx="1394.5" cy="736.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1403.5" y="739.2339">bool referenceElementInConvexDomain(referenceElement: ReferenceElement&amp;)</text><ellipse cx="1394.5" cy="748.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="557" x="1403.5" y="752.0386">void cutAndDiscardPolygonsOnRightSide(referenceElement: ReferenceElement&amp;,line: segment&amp;)</text><ellipse cx="1394.5" cy="761.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1403.5" y="764.8433">double&amp; getBoundingBoxLength()</text><ellipse cx="1394.5" cy="774.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="1403.5" y="777.6479">double&amp; getBoundingBoxHeight()</text><ellipse cx="1394.5" cy="787.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1403.5" y="790.4526">unsigned int&amp; getMaxNumRefElementsPerRow()</text><ellipse cx="1394.5" cy="800.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="1403.5" y="803.2573">unsigned int &amp;getMaxNumRefElementsPerColumn()</text><ellipse cx="1394.5" cy="812.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1403.5" y="816.062">const Polygon &amp;getDomainBoundingBox()</text><ellipse cx="1394.5" cy="825.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1403.5" y="828.8667">const Polygon&amp; getDomain() const</text><ellipse cx="1394.5" cy="838.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="1403.5" y="841.6714">const vector&lt;ReferenceElement&gt;&amp; getMeshCells() const</text><ellipse cx="1394.5" cy="851.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1403.5" y="854.4761">const Polygon&amp; getReferenceElementBoundingBox()</text><ellipse cx="1394.5" cy="864.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1403.5" y="867.2808">double&amp; getDomainBoundingBoxLength()</text><ellipse cx="1394.5" cy="876.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="1403.5" y="880.0854">double&amp; getDomainBoundingBoxHeight()</text><ellipse cx="1394.5" cy="889.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="1403.5" y="892.8901">ReferenceElement&amp; getReferenceElement()</text><ellipse cx="1394.5" cy="902.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="1403.5" y="905.6948">void showMesh(filePath = "showMesh.m": const string)</text><ellipse cx="1394.5" cy="915.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1403.5" y="918.4995">~IMesh(){}</text><!--MD5=[49b4333bed3a745cc53311fcf54bbfcc]
class Mesh--><rect codeLine="281" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="470.5547" id="Mesh" style="stroke:#A80036;stroke-width:1.5;" width="605" x="1383.5" y="41"/><ellipse cx="1665.75" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1668.0938,52.6719 C1667.1563,52.2344 1666.5625,52.0938 1665.6875,52.0938 C1663.0625,52.0938 1661.0625,54.1719 1661.0625,56.8906 L1661.0625,58.0156 C1661.0625,60.5938 1663.1719,62.4844 1666.0625,62.4844 C1667.2813,62.4844 1668.4375,62.1875 1669.1875,61.6406 C1669.7656,61.2344 1670.0938,60.7813 1670.0938,60.3906 C1670.0938,59.9375 1669.7031,59.5469 1669.2344,59.5469 C1669.0156,59.5469 1668.8125,59.625 1668.625,59.8125 C1668.1719,60.2969 1668.1719,60.2969 1667.9844,60.3906 C1667.5625,60.6563 1666.875,60.7813 1666.1094,60.7813 C1664.0625,60.7813 1662.7656,59.6875 1662.7656,57.9844 L1662.7656,56.8906 C1662.7656,55.1094 1664.0156,53.7969 1665.75,53.7969 C1666.3281,53.7969 1666.9375,53.9531 1667.4063,54.2031 C1667.8906,54.4844 1668.0625,54.7031 1668.1563,55.1094 C1668.2188,55.5156 1668.25,55.6406 1668.3906,55.7656 C1668.5313,55.9063 1668.7656,56.0156 1668.9844,56.0156 C1669.25,56.0156 1669.5156,55.875 1669.6875,55.6563 C1669.7969,55.5 1669.8281,55.3125 1669.8281,54.8906 L1669.8281,53.4688 C1669.8281,53.0313 1669.8125,52.9063 1669.7188,52.75 C1669.5625,52.4844 1669.2813,52.3438 1668.9844,52.3438 C1668.6875,52.3438 1668.4844,52.4375 1668.2656,52.75 L1668.0938,52.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="32" x="1686.25" y="61.1543">Mesh</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1384.5" x2="1987.5" y1="73" y2="73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="81"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1403.5" y="87.2104">_file: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="93.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="1403.5" y="100.0151">_meshCells: vector&lt;ReferenceElement&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="106.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="1403.5" y="112.8198">_referenceElement: ReferenceElement</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="119.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="1403.5" y="125.6245">_conformingReferenceElementPolygons: vector&lt;Polygon&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="132.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1403.5" y="138.4292">_referenceElementBoundingBox: Polygon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="145.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1403.5" y="151.2339">double _boundingBoxLength;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="157.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1403.5" y="164.0386">_boundingBoxHeight: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="170.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1403.5" y="176.8433">_domain: Polygon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="183.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1403.5" y="189.6479">_domainBoundingBox: Polygon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="196.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="1403.5" y="202.4526">_maxNumRefElementsPerRow: unsigned int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="209.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="1403.5" y="215.2573">_maxNumRefElementsPerColumn: unsigned int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="221.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="1403.5" y="228.062">_domainBoundingBoxLength: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1391.5" y="234.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="1403.5" y="240.8667">_domainBoundingBoxHeight: double</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1384.5" x2="1987.5" y1="247.4609" y2="247.4609"/><ellipse cx="1394.5" cy="258.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1403.5" y="261.6714">void createMesh()</text><ellipse cx="1394.5" cy="271.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="579" x="1403.5" y="274.4761">ReferenceElement TranslateConformingReferenceElement(xTranslation: double,yTranslation: double)</text><ellipse cx="1394.5" cy="284.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="528" x="1403.5" y="287.2808">Polygon TranslatePolygon(polygon: const Polygon&amp;,xTranslation: double,yTranslation: double)</text><ellipse cx="1394.5" cy="296.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="418" x="1403.5" y="300.0854">void setRectangularDomain(length: const double&amp;,height: const double&amp;)</text><ellipse cx="1394.5" cy="309.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1403.5" y="312.8901">void setConvexDomain()</text><ellipse cx="1394.5" cy="322.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1403.5" y="325.6948">bool referenceElementInConvexDomain(referenceElement: ReferenceElement&amp;)</text><ellipse cx="1394.5" cy="335.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="557" x="1403.5" y="338.4995">void cutAndDiscardPolygonsOnRightSide(referenceElement: ReferenceElement&amp;,line: segment&amp;)</text><ellipse cx="1394.5" cy="348.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1403.5" y="351.3042">double&amp; getBoundingBoxLength()</text><ellipse cx="1394.5" cy="360.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="1403.5" y="364.1089">double&amp; getBoundingBoxHeight()</text><ellipse cx="1394.5" cy="373.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1403.5" y="376.9136">unsigned int&amp; getMaxNumRefElementsPerRow()</text><ellipse cx="1394.5" cy="386.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="1403.5" y="389.7183">unsigned int &amp;getMaxNumRefElementsPerColumn()</text><ellipse cx="1394.5" cy="399.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1403.5" y="402.5229">const Polygon &amp;getDomainBoundingBox()</text><ellipse cx="1394.5" cy="412.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1403.5" y="415.3276">const Polygon&amp; getDomain() const</text><ellipse cx="1394.5" cy="424.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="1403.5" y="428.1323">const vector&lt;ReferenceElement&gt;&amp; getMeshCells() const</text><ellipse cx="1394.5" cy="437.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1403.5" y="440.937">const Polygon&amp; getReferenceElementBoundingBox()</text><ellipse cx="1394.5" cy="450.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1403.5" y="453.7417">double&amp; getDomainBoundingBoxLength()</text><ellipse cx="1394.5" cy="463.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="1403.5" y="466.5464">double&amp; getDomainBoundingBoxHeight()</text><ellipse cx="1394.5" cy="476.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="1403.5" y="479.3511">ReferenceElement&amp; getReferenceElement()</text><ellipse cx="1394.5" cy="488.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="1403.5" y="492.1558">void showMesh(filePath = "showMesh.m": const string)</text><ellipse cx="1394.5" cy="501.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1403.5" y="504.9604">virtual ~IMesh(){}</text><!--MD5=[a64a835c3d62471a77f615251fdde58a]
class Position--><rect codeLine="1" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="99.2188" id="Position" style="stroke:#A80036;stroke-width:1.5;" width="78" x="7" y="227"/><ellipse cx="22" cy="243" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M20.7969,243.875 L22.25,243.875 L22.25,243.9844 C22.25,244.3906 22.2813,244.5469 22.3594,244.7031 C22.5156,244.9531 22.7969,245.1094 23.0938,245.1094 C23.3438,245.1094 23.6094,244.9688 23.7656,244.75 C23.8906,244.5938 23.9219,244.4375 23.9219,243.9844 L23.9219,242.0625 C23.9219,241.9063 23.9219,241.8594 23.9063,241.7031 C23.8438,241.2344 23.5313,240.9219 23.0781,240.9219 C22.8281,240.9219 22.5625,241.0625 22.3906,241.2813 C22.2813,241.4531 22.25,241.6094 22.25,242.0625 L22.25,242.1875 L20.7969,242.1875 L20.7969,239.7813 L24.7813,239.7813 L24.7813,240.6406 C24.7813,241.0469 24.8125,241.2188 24.8906,241.375 C25.0625,241.625 25.3438,241.7813 25.625,241.7813 C25.8906,241.7813 26.1563,241.6406 26.3281,241.4219 C26.4375,241.25 26.4688,241.1094 26.4688,240.6406 L26.4688,238.0938 L18.8438,238.0938 C18.4063,238.0938 18.2813,238.1094 18.125,238.2031 C17.875,238.3594 17.7188,238.6563 17.7188,238.9375 C17.7188,239.2188 17.8594,239.4688 18.0781,239.6406 C18.2344,239.75 18.4219,239.7813 18.8438,239.7813 L19.0938,239.7813 L19.0938,246.2969 L18.8438,246.2969 C18.4375,246.2969 18.2813,246.3125 18.125,246.4219 C17.875,246.5938 17.7188,246.8594 17.7188,247.1563 C17.7188,247.4219 17.8594,247.6719 18.0781,247.8281 C18.2188,247.9531 18.4531,248 18.8438,248 L26.8438,248 L26.8438,245.4219 C26.8438,244.9844 26.8125,244.8438 26.7344,244.6875 C26.5625,244.4375 26.2813,244.2813 26,244.2813 C25.7344,244.2813 25.4688,244.3906 25.2969,244.6406 C25.1875,244.7969 25.1563,244.9375 25.1563,245.4219 L25.1563,246.2969 L20.7969,246.2969 L20.7969,243.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="46" x="36" y="247.1543">Position</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="84" y1="259" y2="259"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="13" y="273.2104">Begin</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="13" y="286.0151">Inner</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="13" y="298.8198">End</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="32" x="13" y="311.6245">Outer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="84" y1="318.2188" y2="318.2188"/><!--MD5=[4296a1ab0576a383a1a509d52c22ebf0]
class Type--><rect codeLine="7" fill="#FEFECE" filter="url(#fbdipukgk3hnj)" height="112.0234" id="Type" style="stroke:#A80036;stroke-width:1.5;" width="189" x="120.5" y="220.5"/><ellipse cx="195.75" cy="236.5" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M194.5469,237.375 L196,237.375 L196,237.4844 C196,237.8906 196.0313,238.0469 196.1094,238.2031 C196.2656,238.4531 196.5469,238.6094 196.8438,238.6094 C197.0938,238.6094 197.3594,238.4688 197.5156,238.25 C197.6406,238.0938 197.6719,237.9375 197.6719,237.4844 L197.6719,235.5625 C197.6719,235.4063 197.6719,235.3594 197.6563,235.2031 C197.5938,234.7344 197.2813,234.4219 196.8281,234.4219 C196.5781,234.4219 196.3125,234.5625 196.1406,234.7813 C196.0313,234.9531 196,235.1094 196,235.5625 L196,235.6875 L194.5469,235.6875 L194.5469,233.2813 L198.5313,233.2813 L198.5313,234.1406 C198.5313,234.5469 198.5625,234.7188 198.6406,234.875 C198.8125,235.125 199.0938,235.2813 199.375,235.2813 C199.6406,235.2813 199.9063,235.1406 200.0781,234.9219 C200.1875,234.75 200.2188,234.6094 200.2188,234.1406 L200.2188,231.5938 L192.5938,231.5938 C192.1563,231.5938 192.0313,231.6094 191.875,231.7031 C191.625,231.8594 191.4688,232.1563 191.4688,232.4375 C191.4688,232.7188 191.6094,232.9688 191.8281,233.1406 C191.9844,233.25 192.1719,233.2813 192.5938,233.2813 L192.8438,233.2813 L192.8438,239.7969 L192.5938,239.7969 C192.1875,239.7969 192.0313,239.8125 191.875,239.9219 C191.625,240.0938 191.4688,240.3594 191.4688,240.6563 C191.4688,240.9219 191.6094,241.1719 191.8281,241.3281 C191.9688,241.4531 192.2031,241.5 192.5938,241.5 L200.5938,241.5 L200.5938,238.9219 C200.5938,238.4844 200.5625,238.3438 200.4844,238.1875 C200.3125,237.9375 200.0313,237.7813 199.75,237.7813 C199.4844,237.7813 199.2188,237.8906 199.0469,238.1406 C198.9375,238.2969 198.9063,238.4375 198.9063,238.9219 L198.9063,239.7969 L194.5469,239.7969 L194.5469,237.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="30" x="216.25" y="240.6543">Type</text><line style="stroke:#A80036;stroke-width:1.5;" x1="121.5" x2="308.5" y1="252.5" y2="252.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="126.5" y="266.7104">NoIntersection</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="126.5" y="279.5151">IntersectionOnLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="126.5" y="292.3198">IntersectionOnSegment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="126.5" y="305.1245">IntersectionParallelOnLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="126.5" y="317.9292">IntersectionParallelOnSegment</text><line style="stroke:#A80036;stroke-width:1.5;" x1="121.5" x2="308.5" y1="324.5234" y2="324.5234"/><!--MD5=[0d599195bed6e6fc6813677f04313d63]
reverse link Segment to Point--><path codeLine="319" d="M2547.63,1742.69 C2580.73,1781.85 2622.39,1820.736 2670,1843 C2704.86,1859.301 2806.93,1837.583 2843,1851 C2878.59,1864.237 2912.94,1885.618 2943.41,1908.832 " fill="none" id="Segment-backto-Point" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2538.97,1732.197,2539.71,1739.37,2546.6158,1741.4459,2545.8759,1734.2728,2538.97,1732.197" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2671" y="1839.0669">contains</text><!--MD5=[4ca00d328d549c4715fc31f6e6cec537]
link Segment to ISegment--><path codeLine="320" d="M2357.24,1732.014 C2297.27,1794.631 2223.6,1871.563 2167.27,1930.377 " fill="none" id="Segment-to-ISegment" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2163.59,1934.224,2172.7016,1930.4851,2167.0461,1930.6108,2166.9204,1924.9553,2163.59,1934.224" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="2261" y="1839.0669">implements</text><!--MD5=[d05aa3f1b8c5742278373ef6041a1e47]
reverse link Polygon to Point--><path codeLine="321" d="M2397.9,1361.009 C2399.93,1362.023 2401.97,1363.021 2404,1364 C2518.74,1419.262 2587.78,1353.175 2680,1441 C2800.4,1555.662 2705.42,1657.891 2798,1796 C2815.96,1822.795 2865.04,1866.849 2915.93,1908.944 " fill="none" id="Polygon-backto-Point" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2386.25,1355.013,2389.7508,1361.3173,2396.9167,1360.5105,2393.4158,1354.2062,2386.25,1355.013" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2799" y="1623.0669">contains</text><!--MD5=[800ccdd72964a50a3363ffdb262cdc1a]
reverse link Polygon to Segment--><path codeLine="322" d="M2297.67,1374.933 C2327.99,1418.883 2359.72,1464.888 2387.31,1504.873 " fill="none" id="Polygon-backto-Segment" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2290.21,1364.108,2290.3245,1371.3182,2297.0241,1373.9856,2296.9096,1366.7754,2290.21,1364.108" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2322" y="1407.0669">contains</text><!--MD5=[810b5c66d5521ec307e9cf201d297304]
link Polygon to IPolygon--><path codeLine="323" d="M2169.53,1364.272 C2160.51,1529.366 2142.96,1763.918 2115,1796 C2047.65,1873.283 1983.64,1807.105 1891,1851 C1869.79,1861.049 1848.62,1873.257 1828.21,1886.475 " fill="none" id="Polygon-to-IPolygon" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1823.86,1889.31,1833.5804,1887.7243,1828.0425,1886.5702,1829.1967,1881.0323,1823.86,1889.31" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="2165" y="1623.0669">implements</text><!--MD5=[44f329a82feae6cbfcb6d824d5d7ee55]
link Intersector1D1D to IIntersector1D1D--><path codeLine="324" d="M795.071,1796.116 C827.548,1830.654 860.941,1866.167 891.338,1898.494 " fill="none" id="Intersector1D1D-to-IIntersector1D1D" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="895.03,1902.421,891.7784,1893.1244,891.6047,1898.7786,885.9505,1898.6049,895.03,1902.421" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="831" y="1839.0669">implements</text><!--MD5=[c2d2277bd7ed0c887333570a0589981f]
reverse link IntersectorPolygonLine to Point--><path codeLine="325" d="M1234.5,956.55 C1462.95,989.25 2728.97,901.56 2844,1034 C2872.31,1066.59 2985.88,1754.036 2996,1796 C3004.92,1832.989 3015.87,1873.04 3026.16,1908.981 " fill="none" id="IntersectorPolygonLine-backto-Point" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1221.53,954.34,1226.772,959.2919,1233.3592,956.3577,1228.1171,951.4058,1221.53,954.34" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2927" y="1407.0669">contains</text><!--MD5=[3909240d970b840b470c3eebc1e3c26b]
reverse link IntersectorPolygonLine to Polygon--><path codeLine="326" d="M1107.64,962.27 C1146.89,978.92 1187.2,993.44 1227,1004 C1382.43,1045.22 1798.06,981.35 1950,1034 C1955.97,1036.07 1961.92,1038.35 1967.84,1040.82 " fill="none" id="IntersectorPolygonLine-backto-Polygon" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1095.49,957.03,1099.4161,963.0786,1106.5095,961.7809,1102.5834,955.7323,1095.49,957.03" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="1228" y="1000.0669">contains</text><!--MD5=[3288e65f58ac2d25731f2fe5fac19772]
link IIntersectorPolygonLine to ISegment--><path codeLine="327" d="M1571.08,1687.61 C1669.49,1728.395 1791.14,1785.087 1891,1851 C1925.59,1873.832 1960.2,1902.819 1990.18,1930.387 " fill="none" id="IIntersectorPolygonLine-to-ISegment" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1994.19,1934.091,1990.2855,1925.0492,1990.5143,1930.7014,1984.8621,1930.9302,1994.19,1934.091" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1879" y="1839.0669">depends</text><!--MD5=[c0ca32b5021a8d65bd8897c8cb99e84a]
link IIntersectorPolygonLine to IPolygon--><path codeLine="328" d="M1436.48,1687.694 C1473.23,1741.616 1525.72,1818.619 1571.02,1885.082 " fill="none" id="IIntersectorPolygonLine-to-IPolygon" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1573.99,1889.444,1572.2236,1879.7548,1571.1728,1885.3132,1565.6144,1884.2624,1573.99,1889.444" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1536" y="1839.0669">depends</text><!--MD5=[159e99f8598a5f50d5bb1d02c6ba87e9]
link IIntersectorPolygonLine to IIntersector1D1D--><path codeLine="329" d="M1325.03,1687.694 C1270.1,1745.352 1190.02,1829.402 1123.96,1898.735 " fill="none" id="IIntersectorPolygonLine-to-IIntersector1D1D" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1120.43,1902.442,1129.5295,1898.6739,1123.8745,1898.8177,1123.7307,1893.1627,1120.43,1902.442" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1188" y="1839.0669">depends</text><!--MD5=[284a3131efec9a0aee327f472b624ec8]
link IntersectorPolygonLine to IIntersectorPolygonLine--><path codeLine="330" d="M913.927,957.03 C1046.6,1141.09 1244.47,1415.601 1337.76,1545.023 " fill="none" id="IntersectorPolygonLine-to-IIntersectorPolygonLine" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1340.76,1549.187,1338.7425,1539.547,1337.8364,1545.1308,1332.2526,1544.2247,1340.76,1549.187" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="1205" y="1203.5669">implements</text><!--MD5=[a86831c1149cf9fa4e66ea4608eb7f3e]
link IPolygonCutter to ISegment--><path codeLine="331" d="M1818.88,1255.098 C1869.22,1299.817 1935.23,1367.353 1972,1441 C2014.11,1525.353 2051.47,1788.19 2069.16,1929.468 " fill="none" id="IPolygonCutter-to-ISegment" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="2069.78,1934.442,2072.6348,1925.016,2069.1609,1929.4805,2064.6964,1926.0066,2069.78,1934.442" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="2051" y="1623.0669">depends</text><!--MD5=[22f49b2f93718be89e6790dbafc1c534]
link IPolygonCutter to IPolygon--><path codeLine="332" d="M1777.66,1255.129 C1799.71,1303.121 1830.07,1375.134 1847,1441 C1869.39,1528.136 1934.65,1762.243 1895,1843 C1887.61,1858.048 1878.27,1872.188 1867.62,1885.403 " fill="none" id="IPolygonCutter-to-IPolygon" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1864.27,1889.474,1873.0706,1885.0525,1867.4411,1885.6082,1866.8853,1879.9787,1864.27,1889.474" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1908" y="1623.0669">depends</text><!--MD5=[09ab601efc2b41504747a2bcfdc41ed6]
link IPolygonCutter to IIntersectorPolygonLine--><path codeLine="333" d="M1703.43,1255.01 C1638.98,1329.554 1523.77,1462.79 1452.42,1545.305 " fill="none" id="IPolygonCutter-to-IIntersectorPolygonLine" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1449.06,1549.195,1457.9702,1544.9988,1452.3284,1545.4111,1451.916,1539.7693,1449.06,1549.195" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="1582" y="1407.0669">depends</text><!--MD5=[cf72d11747d19a3b4db9038c8de1b3d7]
link PolygonCutter to IPolygonCutter--><path codeLine="334" d="M2097.7,874.21 C2009.35,956.72 1887.12,1070.88 1813.87,1139.28 " fill="none" id="PolygonCutter-to-IPolygonCutter" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1809.99,1142.91,1819.292,1139.6739,1813.6381,1139.4908,1813.8213,1133.8369,1809.99,1142.91" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="1965" y="1000.0669">implements</text><!--MD5=[83b56bd99bd885a9aa023069a800a834]
reverse link PolygonCutter to Point--><path codeLine="335" d="M2297.37,883.19 C2328.11,912.31 2364.65,940.29 2404,957 C2455.43,978.84 2864.79,949.27 2906,987 C2973.42,1048.73 3030.06,1653.464 3051.17,1908.729 " fill="none" id="PolygonCutter-backto-Point" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2288.01,874.12,2289.5338,881.1683,2296.626,882.4725,2295.1022,875.4243,2288.01,874.12" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="3001" y="1407.0669">contains</text><!--MD5=[fddc6ddf7065e34184cf005e79ba47d7]
reverse link PolygonCutter to Polygon--><path codeLine="336" d="M2197.52,887.29 C2194.55,932.26 2191.08,984.84 2187.84,1033.83 " fill="none" id="PolygonCutter-backto-Polygon" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2198.38,874.21,2193.9931,879.9332,2197.5888,886.1839,2201.9757,880.4607,2198.38,874.21" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2191" y="1000.0669">contains</text><!--MD5=[27b2df459c6623526107900c8ed116a3]
reverse link ReferenceElement to Point--><path codeLine="337" d="M2838.71,849.06 C2901.51,881.66 2963.54,926.58 3002,987 C3185.76,1275.704 3128.43,1706.646 3086.85,1908.965 " fill="none" id="ReferenceElement-backto-Point" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2826.99,843.11,2830.5307,849.392,2837.6913,848.5397,2834.1506,842.2578,2826.99,843.11" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="3126" y="1407.0669">contains</text><!--MD5=[0b843b0916554a4ac0d3487bb0b9f580]
reverse link ReferenceElement to Polygon--><path codeLine="338" d="M2428.13,959.79 C2402.17,984.42 2375.7,1009.52 2350.16,1033.75 " fill="none" id="ReferenceElement-backto-Polygon" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2437.67,950.74,2430.564,951.9668,2428.9634,958.9981,2436.0694,957.7712,2437.67,950.74" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2388" y="1000.0669">contains</text><!--MD5=[32aede37567cd21c00e4993b941e685d]
link ReferenceElement to IReferenceElement--><path codeLine="339" d="M2624,950.74 C2624,999 2624,1049.76 2624,1092.65 " fill="none" id="ReferenceElement-to-IReferenceElement" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2624,1097.84,2628,1088.84,2624,1092.84,2620,1088.84,2624,1097.84" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="2625" y="1000.0669">implements</text><!--MD5=[9eabe50066aa5a6a5d44265b6acc496a]
link Mesh to IMesh--><path codeLine="340" d="M1686,512.08 C1686,547.24 1686,582.74 1686,615.73 " fill="none" id="Mesh-to-IMesh" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1686,621,1690,612,1686,616,1682,612,1686,621" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="1687" y="555.0669">implements</text><!--MD5=[73d5e9660c1fd12da42ae136bd374abd]
reverse link Mesh to ReferenceElement--><path codeLine="341" d="M2001.35,391.62 C2130.33,444.02 2278.44,511.74 2404,589 C2409.82,592.58 2415.65,596.3 2421.47,600.14 " fill="none" id="Mesh-backto-ReferenceElement" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1988.93,386.6,1992.9922,392.5581,2000.0543,391.0999,1995.9921,385.1418,1988.93,386.6" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="2350" y="555.0669">contains</text><!--MD5=[2ee16b6e8f8adca4a5bb579f9044f249]
reverse link Mesh to Polygon--><path codeLine="342" d="M1374.48,492.43 C1348.74,521.94 1326.36,554.19 1310,589 C1240.41,737.01 1201.48,834.64 1310,957 C1405.05,1064.17 1816.59,981.84 1950,1034 C1956,1036.35 1961.99,1038.89 1967.95,1041.6 " fill="none" id="Mesh-backto-Polygon" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1383.33,482.53,1376.349,484.3373,1375.3323,491.4763,1382.3133,489.6691,1383.33,482.53" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="1311" y="777.5669">contains</text><!--MD5=[1a313727e305e528eaed2f5ed051abad]
@startuml
enum Position {
Begin 
Inner 
End 
Outer 
} 
enum Type {
NoIntersection 
IntersectionOnLine 
IntersectionOnSegment 
IntersectionParallelOnLine 
IntersectionParallelOnSegment 
}
package "Data Transfer Object (DTO)" <<Database>> {
  class Point {
    -_coordinates: Vector2d
    -label: int
    +Point(coordinates: Vector2d)
    +Point(x = 0.0: const double, y = 0.0: const double )
    +Point(point: const Point&)
    +void SetCoordinates(x: const double, y: const double)
    +const Vector2d& GetCoordinates() const
    +int GetPointLabel() const
    +void SetPointLabel(label: const int)
    +Point& operator=(point: const Point&)
    +Point& operator+(point: const Point&)
    +Point& operator-(point: const Point&)
    +friend bool operator==(p1: const Point&, p2: const Point&)
    +friend bool operator!=(p1: const Point&, p2: const Point&)
  }


}

package "Business Logic" {
  interface ISegment {
    +void SetStart(start: const Point&)
    +const Point& GetStart() const
    +Point& GetStart() const
    +void SetEnd(end: const Point&)
    +const Point& GetEnd() const
    +Point& GetEnd()
    +void SetSegment(start: const Point&, end: const Point&)
    +const Vector2d ComputeTangent()
    +const Vector2d GetTangent() const
    +int PointOnTheRightSide(point: const Point&) const
  }
  
  class Segment {
    -_start: Point
    -_end: Point 
    -_tangent: Vector2d
    +Segment(start = Point(): const Point&,end = Point(): const Point&)
    +void SetStart(start: const Point&)
    +const Point& GetStart() const
    +Point& GetStart() const
    +void SetEnd(end: const Point&)
    +const Point& GetEnd() const
    +Point& GetEnd()
    +void SetSegment(start: const Point&, end: const Point&)
    +const Vector2d ComputeTangent()
    +const Vector2d GetTangent() const
    +int PointOnTheRightSide(point: const Point&) const
  }

  interface IPolygon{
    +unsigned int  GetNumberVertices() const
    +const vector<Point>& GetVertices() const
    +void SetVertexAtPosition(point: const Point&, position: const int&)
    +void AppendVertex(point: const Point&)
    +void InsertVertexAtPosition(vertex: const Point&, position: const int&)
    +const Point& GetVertexAtPosition(position: const int&) const
    +int NextVertexId(id: unsigned int) const
    +const Point& GetLastVertex() const
    +double ComputeArea() const
    +const vector<Segment>& GetEdges() const
    +void SetVertexLAbelAtPosition(position: const int&, label: int)
    +int GetPointLabelAtPosition(position: const int&) const
    +void SetVertexLabels(polygonVertices: vector<unsigned int>)
    +void SetDefaultVertexLabels()
    +bool PointInPolygon(point: const Point&)
    +int IsPolygonOnThteRightSide(line: const Segment&) const
    +void BuildUpPolygonEdges()
  }
  
  class Polygon{
    -_numberVertices: unsigned int
    -_vertices: vector<Point>
    -_edges: vector<Segment>
    +Polygon()
    +Polygon(vertices: const vector<Point>&)
    +unsigned int  GetNumberVertices() const
    +const vector<Point>& GetVertices() const
    +void SetVertexAtPosition(point: const Point&, position: const int&)
    +void AppendVertex(point: const Point&)
    +void InsertVertexAtPosition(vertex: const Point&, position: const int&)
    +const Point& GetVertexAtPosition(position: const int&) const
    +int NextVertexId(id: unsigned int) const
    +const Point& GetLastVertex() const
    +double ComputeArea() const
    +const vector<Segment>& GetEdges() const
    +void SetVertexLAbelAtPosition(position: const int&, label: int)
    +int GetPointLabelAtPosition(position: const int&) const
    +void SetVertexLabels(polygonVertices: vector<unsigned int>)
    +void SetDefaultVertexLabels()
    +bool PointInPolygon(point: const Point&)
    +int IsPolygonOnThteRightSide(line: const Segment&) const
    +void BuildUpPolygonEdges()
  }

  interface IIntersector1D1D { 
    
    +void SetToleranceParallelism(const double& _tolerance) 
    +void SetToleranceIntersection(const double& _tolerance)
    +void SetFirstSegment(const Vector2d& origin, const Vector2d& end) 
    +void SetSecondSegment(const Vector2d& origin, const Vector2d& end)
    +const bool ComputeIntersection();
    +const double& ToleranceIntersection() const 
    +const double& ToleranceParallelism() const
    +const Vector2d& ParametricCoordinates() 
    +const double& FirstParametricCoordinate()
    +const double& SecondParametricCoordinate()
    +const Position& PositionIntersectionInFirstEdge()
    +const Position& PositionIntersectionInSecondEdge()
    +const Type& TypeIntersection()
    +Vector2d IntersectionFirstParametricCoordinate(const Vector2d& origin,const Vector2d& end) 
    +Vector2d IntersectionSecondParametricCoordinate(const Vector2d& origin,const Vector2d& end)
}

class Intersector1D1D { 
    -positionIntersectionFirstEdge: Position
    -positionIntersectionSecondEdge: Position 
    -resultParametricCoordinates: Vector2d
    -originFirstSegment: Vector2d
    - rightHandSide: Vector2d
    - matrixTangentVector: Matrix2d
    +type: Type
    +Intersector1D1D()
    +~Intersector1D1D()
    +void SetToleranceParallelism(const double& _tolerance) 
    +void SetToleranceIntersection(const double& _tolerance)
    +void SetFirstSegment(const Vector2d& origin, const Vector2d& end) 
    +void SetSecondSegment(const Vector2d& origin, const Vector2d& end)
    +const bool ComputeIntersection();
    +const double& ToleranceIntersection() const 
    +const double& ToleranceParallelism() const
    +const Vector2d& ParametricCoordinates() 
    +const double& FirstParametricCoordinate()
    +const double& SecondParametricCoordinate()
    +const Position& PositionIntersectionInFirstEdge()
    +const Position& PositionIntersectionInSecondEdge()
    +const Type& TypeIntersection()
    +Vector2d IntersectionFirstParametricCoordinate(const Vector2d& origin,const Vector2d& end) 
    +Vector2d IntersectionSecondParametricCoordinate(const Vector2d& origin,const Vector2d& end)
}

  interface IIntersectorPolygonLine {
    -bool CheckInConicCombination(line: const Vector2d, v1: const Vector2d, v2: const Vector2d, flag: int&) const
    -void ExtendedPolygonIfEndpointsOnEdge(numpoly: int&, firstIntersectionId: const int&, secondIntersectionId: const int&, forwardDirection: const bool&)
    +const vector<Point>& FindIntersectionVertices()
    +const vector<Polygon>& FindPolygons()
    +const vector<Polygon>& GetExtendedPolygons()
    +const vector<Point>& FindNewPoints()
    +bool GetstartFound() const
  }
  
  class IntersectorPolygonLine {
    - _intersector: IIntersector1D1D&
    -_polygon: IPolygon& 
    - _line: ISegment&
    -_intersectionVertices: vector<Point> 
    - _newPoints: vector<Point>
    - _extendedNewPolygons: vector<Polygon>
    -_newPolygons: vector<Polygon> 
    -_intersectionIdToSegmentId: vector<int> 
    - _segmentIdToIntersectionId: vector<int>
    -_foundVertex: vector<bool> 
    -_startFound = false: bool
    -_endFound = false: bool
    -_flag: vector<int>
    -_mmapParametricCoordinateToIntersectionPoint: multimap<double, Point> 
    -_mmapParametricCoordinateToSegmentId: multimap<double, int> 
    - _mapSegmentIdToParametricCoordinate: map<int, double>
    -_mapIntersectionIdToParametricCoordinate: map<int,double> 
    -_parallelIntersections: vector<bool> 
    -bool CheckInConicCombination(line: const Vector2d, v1: const Vector2d, v2: const Vector2d, flag: int&) const
    -void ExtendedPolygonIfEndpointsOnEdge(numpoly: int&, firstIntersectionId: const int&, secondIntersectionId: const int&, forwardDirection: const bool&)
    +const vector<Point>& FindIntersectionVertices()
    +const vector<Polygon>& FindPolygons()
    +const vector<Polygon>& GetExtendedPolygons()
    +const vector<Point>& FindNewPoints()
    +bool GetstartFound() const
  }
    interface IReferenceElement{
    +void computeBoundingBox(Polygon& polygon)
    +void computeReferenceElement(Polygon& polygon)
    +const vector<Point>& getBoundingBoxVertices() const
    +const vector<Polygon>& getReferenceElement() const
    +const Point& getBoundingBoxVertexAtPosition(unsigned int& i)
    +void findBoundaryVertices() 
    +const map<double, Point>& getMapSouthXCoordinates() const
    +const map<double, Point>& getMapNorthXCoordinates() const
    +const map<double, Point>& getMapEastYCoordinates() const
    +const map<double, Point>& getMapWestYCoordinates() const
    +void makeConforming()
    +const vector<Polygon>& getConformingReferenceElement() const
  }
  
  interface IPolygonCutter{
    +const vector<Polygon>& cutPolygon() 
    +const vector<Polygon>& getCuttedPolygons() const
    +const vector<Point>& getIntersectionVertices() const
    +const vector<Point>& getNewPoints() const 
    +void showPolygon(filePath = "showPolygon.m": const string)
  }
  
  class PolygonCutter{
  string _file;
    -_intersector: IIntersectorPolygonLine& 
    -_polygon: IPolygon& _polygon;
    -ISegment& _cutter;
    -_cuttedPolygons: vector<Polygon>
    -_intersectionVertices: vector<Point> 
    -_newPoints: vector<Point>
    +const vector<Polygon>& cutPolygon() 
    +const vector<Polygon>& getCuttedPolygons() const
    +const vector<Point>& getIntersectionVertices() const
    +const vector<Point>& getNewPoints() const 
    +void showPolygon(filePath = "showPolygon.m": const string)
  }
  
  class ReferenceElement{
    -_boundingBoxVertices: vector<Point>
    -_referenceElementPolygons: vector<Polygon> 
    -_conformingReferenceElementPolygons: vector<Polygon> 
    -_boundingBox: Polygon
    -_mapSouthXCoordinates: map<double, Point>
    -_mapNorthXCoordinates: map<double, Point> 
    -_mapWestYCoordinates: map<double, Point>
    -_mapEastYCoordinates: map<double, Point>
    -_minX: double _
    -_minY: double 
    -_maxX: double
    -_maxY: double
    +void computeBoundingBox(Polygon& polygon)
    +void computeReferenceElement(Polygon& polygon)
    +const vector<Point>& getBoundingBoxVertices() const
    +const vector<Polygon>& getReferenceElement() const
    +const Point& getBoundingBoxVertexAtPosition(unsigned int& i)
    +void findBoundaryVertices() 
    +const map<double, Point>& getMapSouthXCoordinates() const
    +const map<double, Point>& getMapNorthXCoordinates() const
    +const map<double, Point>& getMapEastYCoordinates() const
    +const map<double, Point>& getMapWestYCoordinates() const
    +void makeConforming()
    +const vector<Polygon>& getConformingReferenceElement() const
  }
  interface IMesh{
    +void createMesh() 
    +ReferenceElement TranslateConformingReferenceElement(xTranslation: double,yTranslation: double)
    +Polygon TranslatePolygon(polygon: const Polygon&,xTranslation: double,yTranslation: double)
    +void setRectangularDomain(length: const double&,height: const double&)
    +void setConvexDomain()
    +bool referenceElementInConvexDomain(referenceElement: ReferenceElement&)
    +void cutAndDiscardPolygonsOnRightSide(referenceElement: ReferenceElement&,line: segment&)
    +double& getBoundingBoxLength()
    +double& getBoundingBoxHeight()
    +unsigned int& getMaxNumRefElementsPerRow()
    +unsigned int &getMaxNumRefElementsPerColumn()
    +const Polygon &getDomainBoundingBox()
    +const Polygon& getDomain() const
    +const vector<ReferenceElement>& getMeshCells() const
    +const Polygon& getReferenceElementBoundingBox()
    +double& getDomainBoundingBoxLength()
    +double& getDomainBoundingBoxHeight()
    +ReferenceElement& getReferenceElement()
    +void showMesh(filePath = "showMesh.m": const string)
    +~IMesh(){}
  }
  
   class Mesh{
    -_file: string
    -_meshCells: vector<ReferenceElement>
    -_referenceElement: ReferenceElement
    -_conformingReferenceElementPolygons: vector<Polygon>
    -_referenceElementBoundingBox: Polygon
    -double _boundingBoxLength;
    -_boundingBoxHeight: double
    -_domain: Polygon
    -_domainBoundingBox: Polygon
    -_maxNumRefElementsPerRow: unsigned int 
    -_maxNumRefElementsPerColumn: unsigned int 
    -_domainBoundingBoxLength: double
    -_domainBoundingBoxHeight: double
    +void createMesh() 
    +ReferenceElement TranslateConformingReferenceElement(xTranslation: double,yTranslation: double)
    +Polygon TranslatePolygon(polygon: const Polygon&,xTranslation: double,yTranslation: double)
    +void setRectangularDomain(length: const double&,height: const double&)
    +void setConvexDomain()
    +bool referenceElementInConvexDomain(referenceElement: ReferenceElement&)
    +void cutAndDiscardPolygonsOnRightSide(referenceElement: ReferenceElement&,line: segment&)
    +double& getBoundingBoxLength()
    +double& getBoundingBoxHeight()
    +unsigned int& getMaxNumRefElementsPerRow()
    +unsigned int &getMaxNumRefElementsPerColumn()
    +const Polygon &getDomainBoundingBox()
    +const Polygon& getDomain() const
    +const vector<ReferenceElement>& getMeshCells() const
    +const Polygon& getReferenceElementBoundingBox()
    +double& getDomainBoundingBoxLength()
    +double& getDomainBoundingBoxHeight()
    +ReferenceElement& getReferenceElement()
    +void showMesh(filePath = "showMesh.m": const string)
    +virtual ~IMesh(){}
  }
  
}

Segment *- - Point : contains
Segment - -> ISegment : implements
Polygon *- - Point : contains
Polygon *- - Segment : contains
Polygon - -> IPolygon : implements
Intersector1D1D - -> IIntersector1D1D: implements
IntersectorPolygonLine *- - Point : contains
IntersectorPolygonLine *- - Polygon : contains
IIntersectorPolygonLine ..> ISegment : depends
IIntersectorPolygonLine ..> IPolygon : depends
IIntersectorPolygonLine ..> IIntersector1D1D : depends
IntersectorPolygonLine - -> IIntersectorPolygonLine: implements
IPolygonCutter ..> ISegment: depends
IPolygonCutter ..> IPolygon: depends
IPolygonCutter ..> IIntersectorPolygonLine: depends
PolygonCutter - -> IPolygonCutter: implements
PolygonCutter *- - Point: contains
PolygonCutter *- - Polygon: contains
ReferenceElement *- - Point : contains
ReferenceElement *- - Polygon : contains
ReferenceElement - -> IReferenceElement: implements
Mesh - -> IMesh: implements
Mesh *- - ReferenceElement: contains
Mesh *- - Polygon: contains
@enduml

PlantUML version 1.2021.7beta4(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>